<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>ShawnZhou的小站</title>
  <icon>https://www.gravatar.com/avatar/033662a8abc6692d1d8cbbe56ff5130c</icon>
  <subtitle>分享技术，记录感慨</subtitle>
  <link href="https://shawnzhou.world/atom.xml" rel="self"/>
  
  <link href="https://shawnzhou.world/"/>
  <updated>2022-02-25T15:38:42.809Z</updated>
  <id>https://shawnzhou.world/</id>
  
  <author>
    <name>Shawn Zhou</name>
    <email>ssdrt0400@qq.com</email>
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>JavaScript异步编程知识点集锦</title>
    <link href="https://shawnzhou.world/2022/02/22/javascript-asynchronous-code/"/>
    <id>https://shawnzhou.world/2022/02/22/javascript-asynchronous-code/</id>
    <published>2022-02-22T07:12:46.000Z</published>
    <updated>2022-02-25T15:38:42.809Z</updated>
    
    
    <summary type="html">&lt;p&gt;计算机科学中的一个基本概念就是同步行为和异步行为的对立与统一。对于JavaScript这种单线程语言来说，异步操作更是它的核心机制之一，由于没有多线程的加持，并行处理就成为了JavaScript要着重讨论的话题。异步操作就可以处理等待时间较长或计算量比较大的操作，同时不会阻塞主线程的执行。&lt;/p&gt;
&lt;p&gt;在ES6标准之后，JavaScript对异步编程机制的支持大大加强，引入了Promise这种强力的工具，之后又新增了async和await关键字作为更优质的异步函数解决方案。&lt;/p&gt;
&lt;p&gt;这里将这些内容做个简单的整理，曾经虽然也记录过一部分学习笔记但并不是很系统，本文争取彻底吃透这个知识点。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://shawnzhou-image.oss-cn-beijing.aliyuncs.com/blog-image/8e2d1523b61c8800d0c2f890559320d1.jpg&quot;&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="前端开发那些事" scheme="https://shawnzhou.world/categories/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91%E9%82%A3%E4%BA%9B%E4%BA%8B/"/>
    
    
    <category term="JavaScript" scheme="https://shawnzhou.world/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>测试一下Navigator的手机振动API</title>
    <link href="https://shawnzhou.world/2022/02/20/test-navigator-vibrate/"/>
    <id>https://shawnzhou.world/2022/02/20/test-navigator-vibrate/</id>
    <published>2022-02-19T16:57:53.000Z</published>
    <updated>2022-02-19T17:23:37.526Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;不保证能行噢，我只是简单做个测试。&lt;/p&gt;
&lt;html&gt;

&lt;input type=&quot;number&quot; placeholder=&quot;可以设置振动的毫秒数&quot; width=&quot;500&quot; id=&quot;timer&quot;  /&gt;

&lt;p&gt;&lt;button</summary>
        
      
    
    
    
    <category term="各种瞎搞操作" scheme="https://shawnzhou.world/categories/%E5%90%84%E7%A7%8D%E7%9E%8E%E6%90%9E%E6%93%8D%E4%BD%9C/"/>
    
    
    <category term="JavaScript" scheme="https://shawnzhou.world/tags/JavaScript/"/>
    
    <category term="BOM" scheme="https://shawnzhou.world/tags/BOM/"/>
    
  </entry>
  
  <entry>
    <title>JavaScript函数防抖、节流操作的原因与实现</title>
    <link href="https://shawnzhou.world/2022/02/18/debounce-and-throttle/"/>
    <id>https://shawnzhou.world/2022/02/18/debounce-and-throttle/</id>
    <published>2022-02-18T07:26:28.000Z</published>
    <updated>2022-02-18T15:36:25.413Z</updated>
    
    
    <summary type="html">&lt;p&gt;最早听到这两个名词的时候还是在牛客的面经里，初次听起来很陌生，但后来慢慢发现，这两个操作还是相当重要的，关键在于要弄懂背后的理念，至于如何实现反而倒是次要的。&lt;/p&gt;
&lt;p&gt;这篇文章详细的记录一下为什么会用到防抖和节流，以及它们的实现方式和常见使用场景。我相信正确的面试题并不是凭空产生的，问题的背后总能折射出一种业务实现中的细节。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://shawnzhou-image.oss-cn-beijing.aliyuncs.com/blog-image/d8c104d74fe43fe95a512ebd7b233c36.jpg&quot;&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="前端开发那些事" scheme="https://shawnzhou.world/categories/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91%E9%82%A3%E4%BA%9B%E4%BA%8B/"/>
    
    
    <category term="JavaScript" scheme="https://shawnzhou.world/tags/JavaScript/"/>
    
    <category term="防抖" scheme="https://shawnzhou.world/tags/%E9%98%B2%E6%8A%96/"/>
    
    <category term="节流" scheme="https://shawnzhou.world/tags/%E8%8A%82%E6%B5%81/"/>
    
  </entry>
  
  <entry>
    <title>做前端的一点小感想</title>
    <link href="https://shawnzhou.world/2022/01/23/a-little-feeling/"/>
    <id>https://shawnzhou.world/2022/01/23/a-little-feeling/</id>
    <published>2022-01-23T15:05:27.000Z</published>
    <updated>2022-01-23T15:22:45.752Z</updated>
    
    
    <summary type="html">&lt;p&gt;大学研究了四年前端，但遗憾的是在几乎没有人带我的情况下，弯路走了不少，也踩了无数的坑。幸好也稍微攒了点经验，这里简单做个总结。如果其中有些文字你难以理解，先尝试忘记这些“教条”，亲自去实践一段时间后再来回味，说不定你会有比我更深刻的理解。&lt;/p&gt;
&lt;p&gt;非常感谢我的实习导师，为我的职业生涯指点迷津。本文中的一些观点是导师之前工作中讲到的，我结合了一下工程实践中的经验，总结出来了这篇文章。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://shawnzhou-image.oss-cn-beijing.aliyuncs.com/blog-image/f9b843a16effa490231443a2e647c222.jpg&quot;&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="杂谈与随想" scheme="https://shawnzhou.world/categories/%E6%9D%82%E8%B0%88%E4%B8%8E%E9%9A%8F%E6%83%B3/"/>
    
    
    <category term="经验沉淀" scheme="https://shawnzhou.world/tags/%E7%BB%8F%E9%AA%8C%E6%B2%89%E6%B7%80/"/>
    
  </entry>
  
  <entry>
    <title>Vue2.x与3.x的变化侦测原理分析</title>
    <link href="https://shawnzhou.world/2022/01/20/vue-change-detect/"/>
    <id>https://shawnzhou.world/2022/01/20/vue-change-detect/</id>
    <published>2022-01-20T09:17:23.000Z</published>
    <updated>2022-01-23T14:53:31.214Z</updated>
    
    
    <summary type="html">&lt;p&gt;Vue 的一大特性是可以由数据的变化引起DOM的变化，这得益于它设计精巧的响应式系统。一个 Vue 应用程序在运行时会因为数据的变化而不断进行重新渲染，Vue 的响应式系统就赋予了框架重新渲染的能力。&lt;/p&gt;
&lt;p&gt;变化侦测是实现响应式系统的核心，实习结束，拿起去年看不懂的《深入浅出 Vue.js 》开始二刷，记录一下心得体会。&lt;/p&gt;
&lt;p&gt;书中介绍的是 Vue 2 版本的变化侦测原理，本篇文章同时也会将 Vue 3版本的变化侦测原理补充进去。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://shawnzhou-image.oss-cn-beijing.aliyuncs.com/blog-image/03beb31eae77c48735c5cef42762dc8a.jpg&quot;&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="前端开发那些事" scheme="https://shawnzhou.world/categories/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91%E9%82%A3%E4%BA%9B%E4%BA%8B/"/>
    
    
    <category term="Vue" scheme="https://shawnzhou.world/tags/Vue/"/>
    
  </entry>
  
  <entry>
    <title>npm与yarn的区别到底都在哪？</title>
    <link href="https://shawnzhou.world/2021/09/28/npm-yarn/"/>
    <id>https://shawnzhou.world/2021/09/28/npm-yarn/</id>
    <published>2021-09-27T17:06:18.000Z</published>
    <updated>2022-01-21T06:06:50.416Z</updated>
    
    
    <summary type="html">&lt;p&gt;npm是我们的老朋友了，此前朋友推荐了yarn，在使用中发现yarn确实比npm便利了许多，那可是有没有思考过，这两者间到底有什么区别？&lt;/p&gt;
&lt;p&gt;这里简单探究一下。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://shawnzhou-image.oss-cn-beijing.aliyuncs.com/blog-image/202109280112403.jpg&quot;&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="前端开发那些事" scheme="https://shawnzhou.world/categories/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91%E9%82%A3%E4%BA%9B%E4%BA%8B/"/>
    
    
  </entry>
  
  <entry>
    <title>JavaScript中的宏任务与微任务</title>
    <link href="https://shawnzhou.world/2021/09/22/javascript-macrotask-microtask/"/>
    <id>https://shawnzhou.world/2021/09/22/javascript-macrotask-microtask/</id>
    <published>2021-09-21T16:55:50.000Z</published>
    <updated>2022-01-21T06:06:50.415Z</updated>
    
    
    <summary type="html">&lt;p&gt;这个概念其实挺抽象的，要理解它，得从JavaScript运行机制开始聊起。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://shawnzhou-image.oss-cn-beijing.aliyuncs.com/blog-image/202109231222803.jpg&quot;&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="前端开发那些事" scheme="https://shawnzhou.world/categories/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91%E9%82%A3%E4%BA%9B%E4%BA%8B/"/>
    
    
    <category term="JavaScript" scheme="https://shawnzhou.world/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>Vue2与Vue3之间到底有哪些区别？</title>
    <link href="https://shawnzhou.world/2021/09/22/vue2-vue3-differences/"/>
    <id>https://shawnzhou.world/2021/09/22/vue2-vue3-differences/</id>
    <published>2021-09-21T16:37:30.000Z</published>
    <updated>2022-01-21T06:06:50.423Z</updated>
    
    
    <summary type="html">&lt;p&gt;Vue2与Vue3之间的区别，这里简单记录一下。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://shawnzhou-image.oss-cn-beijing.aliyuncs.com/blog-image/202109231222852.jpg&quot;&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="前端开发那些事" scheme="https://shawnzhou.world/categories/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91%E9%82%A3%E4%BA%9B%E4%BA%8B/"/>
    
    
    <category term="JavaScript" scheme="https://shawnzhou.world/tags/JavaScript/"/>
    
    <category term="Vue" scheme="https://shawnzhou.world/tags/Vue/"/>
    
  </entry>
  
  <entry>
    <title>关于JavaScript函数的一点冷知识</title>
    <link href="https://shawnzhou.world/2021/09/21/javascript-function/"/>
    <id>https://shawnzhou.world/2021/09/21/javascript-function/</id>
    <published>2021-09-21T14:44:56.000Z</published>
    <updated>2022-01-21T06:06:50.414Z</updated>
    
    
    <summary type="html">&lt;p&gt;红宝书第十章，关于函数，记录一些平时可能注意不到的东西。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://shawnzhou-image.oss-cn-beijing.aliyuncs.com/blog-image/202109231221398.jpg&quot;&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="前端开发那些事" scheme="https://shawnzhou.world/categories/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91%E9%82%A3%E4%BA%9B%E4%BA%8B/"/>
    
    
    <category term="JavaScript" scheme="https://shawnzhou.world/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>LRU算法 学习笔记</title>
    <link href="https://shawnzhou.world/2021/09/21/LRU-algorithm/"/>
    <id>https://shawnzhou.world/2021/09/21/LRU-algorithm/</id>
    <published>2021-09-20T16:42:19.000Z</published>
    <updated>2022-01-21T06:06:50.406Z</updated>
    
    
    <summary type="html">&lt;p&gt;LRU算法是一种常见的页面置换算法，选择内存中最近最久未使用的页面予以淘汰，也就是根据数据的历史访问记录来淘汰数据，其核心思想是“如果数据最近被访问过，那么将来被访问的几率也更高”。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://shawnzhou-image.oss-cn-beijing.aliyuncs.com/blog-image/202109210045581.jpg&quot;&gt;&lt;/p&gt;</summary>
    
    
    
    
    <category term="JavaScript" scheme="https://shawnzhou.world/tags/JavaScript/"/>
    
    <category term="算法" scheme="https://shawnzhou.world/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>JS函数柯里化 学习笔记</title>
    <link href="https://shawnzhou.world/2021/09/20/function-currying/"/>
    <id>https://shawnzhou.world/2021/09/20/function-currying/</id>
    <published>2021-09-20T15:39:43.000Z</published>
    <updated>2022-01-21T06:06:50.413Z</updated>
    
    
    <summary type="html">&lt;p&gt;函数柯里化是一个比较重要的JS特性，在笔试题和面试题中都出现过，现在把它学习一下。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://shawnzhou-image.oss-cn-beijing.aliyuncs.com/blog-image/202109202340400.jpg&quot;&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="前端开发那些事" scheme="https://shawnzhou.world/categories/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91%E9%82%A3%E4%BA%9B%E4%BA%8B/"/>
    
    
    <category term="JavaScript" scheme="https://shawnzhou.world/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>CSS实现三栏布局的方法</title>
    <link href="https://shawnzhou.world/2021/09/19/three-column-layout/"/>
    <id>https://shawnzhou.world/2021/09/19/three-column-layout/</id>
    <published>2021-09-19T08:43:02.000Z</published>
    <updated>2022-01-21T06:06:50.419Z</updated>
    
    
    <summary type="html">&lt;p&gt;学习一下三栏布局，同时补充一下BFC和文档流的知识。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://shawnzhou-image.oss-cn-beijing.aliyuncs.com/blog-image/202109202337202.jpg&quot;&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="前端开发那些事" scheme="https://shawnzhou.world/categories/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91%E9%82%A3%E4%BA%9B%E4%BA%8B/"/>
    
    
    <category term="HTML" scheme="https://shawnzhou.world/tags/HTML/"/>
    
    <category term="CSS" scheme="https://shawnzhou.world/tags/CSS/"/>
    
    <category term="布局" scheme="https://shawnzhou.world/tags/%E5%B8%83%E5%B1%80/"/>
    
  </entry>
  
  <entry>
    <title>Vue3.x中集成axios的方法</title>
    <link href="https://shawnzhou.world/2021/07/28/vue3-axios/"/>
    <id>https://shawnzhou.world/2021/07/28/vue3-axios/</id>
    <published>2021-07-28T00:34:06.000Z</published>
    <updated>2022-01-21T06:06:50.424Z</updated>
    
    
    <summary type="html">&lt;p&gt; 以前使用Vue2+Vue-CLI的axios比较多，用于和后端对接数据接口。现在更换为Vue3+Vite2后，axios的引入有了一些微妙的变化，这里记录一下引入的过程方便以后回顾。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://shawnzhou-image.oss-cn-beijing.aliyuncs.com/blog-image/20210728084353.jpg&quot;&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="前端开发那些事" scheme="https://shawnzhou.world/categories/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91%E9%82%A3%E4%BA%9B%E4%BA%8B/"/>
    
    
    <category term="JavaScript" scheme="https://shawnzhou.world/tags/JavaScript/"/>
    
    <category term="Vue" scheme="https://shawnzhou.world/tags/Vue/"/>
    
    <category term="axios" scheme="https://shawnzhou.world/tags/axios/"/>
    
  </entry>
  
  <entry>
    <title>JavaScript ES6 Proxy学习笔记</title>
    <link href="https://shawnzhou.world/2021/07/25/javascript-proxy/"/>
    <id>https://shawnzhou.world/2021/07/25/javascript-proxy/</id>
    <published>2021-07-25T10:42:39.000Z</published>
    <updated>2022-01-21T06:06:50.416Z</updated>
    
    
    <summary type="html">&lt;p&gt; 好久没来更新博客了，之前因为复习周和找实习发生了很多事情，安定下来后需要好好补补了。&lt;/p&gt;
&lt;p&gt;最近使用了vue3之后，发现很多地方都用到了Proxy，有必要了解一下。&lt;/p&gt;
&lt;p&gt;本笔记摘自《ECMAScript6标准入门》第12章。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://shawnzhou-image.oss-cn-beijing.aliyuncs.com/blog-image/20210725185210.jpg&quot;&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="前端开发那些事" scheme="https://shawnzhou.world/categories/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91%E9%82%A3%E4%BA%9B%E4%BA%8B/"/>
    
    
    <category term="JavaScript" scheme="https://shawnzhou.world/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>一文搞懂从输入URL到页面展示全过程</title>
    <link href="https://shawnzhou.world/2021/05/30/the-URL-from-the-input-to-the-page-display-process/"/>
    <id>https://shawnzhou.world/2021/05/30/the-URL-from-the-input-to-the-page-display-process/</id>
    <published>2021-05-30T06:19:37.000Z</published>
    <updated>2022-01-21T06:06:50.419Z</updated>
    
    
    <summary type="html">&lt;p&gt;前段时间因为各种事情一直在忙，最近总算是告一段落了，学点东西记录一下。&lt;/p&gt;
&lt;p&gt;URL从输入到解析再到展示的全过程是一个非常经典的面试题，也是非常考验一个程序员基本能力的问题，以此为轴，可以串出很多深层次的知识点。&lt;/p&gt;
&lt;p&gt;之前我对这个问题的了解非常浅层次，后来参阅了很多资料之后，感觉是将它整理出来的时候了。它可能不是最细的，但我会尽力完善。&lt;/p&gt;
&lt;p&gt;“从一个网址从浏览器中输入并跳转起，到页面展示在你的屏幕上，这中间发生了什么？”接下来我们就开始一探究竟。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://shawnzhou-image.oss-cn-beijing.aliyuncs.com/blog-image/20210530145341.jpg&quot;&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="前端开发那些事" scheme="https://shawnzhou.world/categories/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91%E9%82%A3%E4%BA%9B%E4%BA%8B/"/>
    
    
    <category term="HTML" scheme="https://shawnzhou.world/tags/HTML/"/>
    
    <category term="CSS" scheme="https://shawnzhou.world/tags/CSS/"/>
    
    <category term="计算机网络" scheme="https://shawnzhou.world/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/"/>
    
  </entry>
  
  <entry>
    <title>CSS flex布局学习笔记</title>
    <link href="https://shawnzhou.world/2021/05/06/css-flex-layout/"/>
    <id>https://shawnzhou.world/2021/05/06/css-flex-layout/</id>
    <published>2021-05-06T10:44:15.000Z</published>
    <updated>2022-01-21T06:06:50.409Z</updated>
    
    
    <summary type="html">&lt;p&gt;flex布局方式是CSS3中的一个新特性。它的全称为flexible box，意为弹性盒。这是一种非常特殊的盒模型，它能扩展或收缩内部元素的大小，以达到最大限度的利用空间，提供了一种能更加简洁，直观，有效的排列元素的方法，可以非常灵活地决定元素的排列方法。目前flex布局已经被所有主流浏览器支持，可以安全地使用这个特性。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://shawnzhou-image.oss-cn-beijing.aliyuncs.com/blog-image/20210506185541.jpg&quot;&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="前端开发那些事" scheme="https://shawnzhou.world/categories/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91%E9%82%A3%E4%BA%9B%E4%BA%8B/"/>
    
    
    <category term="CSS" scheme="https://shawnzhou.world/tags/CSS/"/>
    
    <category term="CSS3" scheme="https://shawnzhou.world/tags/CSS3/"/>
    
    <category term="flex" scheme="https://shawnzhou.world/tags/flex/"/>
    
  </entry>
  
  <entry>
    <title>uniCloud中云函数的使用与工具类封装</title>
    <link href="https://shawnzhou.world/2021/05/05/cloud-function-in-uni-app/"/>
    <id>https://shawnzhou.world/2021/05/05/cloud-function-in-uni-app/</id>
    <published>2021-05-05T06:18:53.000Z</published>
    <updated>2022-01-21T06:06:50.408Z</updated>
    
    
    <summary type="html">&lt;p&gt;uni-app是一个方便小程序开发的基于Vue的框架，它为开发者提供了一个非常方便的平台叫做uniCloud，使用它可以代替部分传统的服务端功能，使用云数据库和云函数（可以理解为数据接口）进行方便的CRUD操作。&lt;/p&gt;
&lt;p&gt;但是uniCloud中原生的&lt;code&gt;uniCloud.callFunction&lt;/code&gt;方法比较底层，在接口数量较多时会造成维护不便，所以需要一个结构对它进行解耦。这里对云函数的基本使用和一种简易的封装方式做个笔记。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://shawnzhou-image.oss-cn-beijing.aliyuncs.com/blog-image/20210505143022.jpg&quot;&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="前端开发那些事" scheme="https://shawnzhou.world/categories/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91%E9%82%A3%E4%BA%9B%E4%BA%8B/"/>
    
    
    <category term="JavaScript" scheme="https://shawnzhou.world/tags/JavaScript/"/>
    
    <category term="uni-app" scheme="https://shawnzhou.world/tags/uni-app/"/>
    
    <category term="uniCloud" scheme="https://shawnzhou.world/tags/uniCloud/"/>
    
    <category term="小程序开发" scheme="https://shawnzhou.world/tags/%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%BC%80%E5%8F%91/"/>
    
  </entry>
  
  <entry>
    <title>为什么我们不应再继续使用Windows7了？</title>
    <link href="https://shawnzhou.world/2021/04/28/good-bye-windows7/"/>
    <id>https://shawnzhou.world/2021/04/28/good-bye-windows7/</id>
    <published>2021-04-28T05:32:47.000Z</published>
    <updated>2022-01-21T06:06:50.413Z</updated>
    
    
    <summary type="html">&lt;p&gt;5月份工作室要开展电脑服务日活动，其中有一项活动内容是win7系统免费升级win10（基于学校提供的正版化服务）。自从Windows 7停止维护之后，学校的电脑也陆续要求全部更换为国产操作系统或者正版Windows 10。知道这件事的我突然在脑内来了一波回忆杀，我仍然记得小学时初次见到win7 aero的惊艳感，直到后来有自己的电脑之前，我一直在使用的操作系统就是Windows 7。时间到了2021年，现在的Windows 7到底怎么样了？&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://shawnzhou-image.oss-cn-beijing.aliyuncs.com/blog-image/20210428134045.jpg&quot;&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="杂谈与随想" scheme="https://shawnzhou.world/categories/%E6%9D%82%E8%B0%88%E4%B8%8E%E9%9A%8F%E6%83%B3/"/>
    
    
    <category term="操作系统" scheme="https://shawnzhou.world/tags/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/"/>
    
    <category term="windows7" scheme="https://shawnzhou.world/tags/windows7/"/>
    
  </entry>
  
  <entry>
    <title>JavaScript中的Set和Map数据结构</title>
    <link href="https://shawnzhou.world/2021/04/27/javascript-set-map/"/>
    <id>https://shawnzhou.world/2021/04/27/javascript-set-map/</id>
    <published>2021-04-27T12:10:46.000Z</published>
    <updated>2022-01-21T06:06:50.416Z</updated>
    
    
    <summary type="html">&lt;p&gt;在ES6中，JavaScript提供了两个新的数据结构Set和Map，使用它们可以在一些场景下方便很多。&lt;/p&gt;
&lt;p&gt;本笔记摘自《ECMAScript6标准入门》第11章。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://shawnzhou-image.oss-cn-beijing.aliyuncs.com/blog-image/07426ed0bd44c46c39659b6f561f0414.jpg&quot;&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="前端开发那些事" scheme="https://shawnzhou.world/categories/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91%E9%82%A3%E4%BA%9B%E4%BA%8B/"/>
    
    
    <category term="JavaScript" scheme="https://shawnzhou.world/tags/JavaScript/"/>
    
    <category term="数据结构" scheme="https://shawnzhou.world/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
  </entry>
  
  <entry>
    <title>基于阿里云OSS+PicGo+Typora的自动博客图床</title>
    <link href="https://shawnzhou.world/2021/04/25/aliyun-oss/"/>
    <id>https://shawnzhou.world/2021/04/25/aliyun-oss/</id>
    <published>2021-04-25T14:06:33.000Z</published>
    <updated>2022-01-21T06:06:50.407Z</updated>
    
    
    <summary type="html">&lt;p&gt; 事情是这样的，本来前几天还好好的图床，昨天突然把我博客一堆封面图全删了，我感到非常裂开。。&lt;/p&gt;
&lt;p&gt;然后看到同学有自己的OSS存储，我在想我是不是也可以整一个，然后就整了一个，这里记录了一下整个过程以及相关的注意事项，方便后续查阅。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://shawnzhou-image.oss-cn-beijing.aliyuncs.com/blog-image/d478daf074013cd6833aa45f8b6d6cb6.jpg&quot;&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="教程相关" scheme="https://shawnzhou.world/categories/%E6%95%99%E7%A8%8B%E7%9B%B8%E5%85%B3/"/>
    
    
    <category term="教程" scheme="https://shawnzhou.world/tags/%E6%95%99%E7%A8%8B/"/>
    
    <category term="阿里云OSS" scheme="https://shawnzhou.world/tags/%E9%98%BF%E9%87%8C%E4%BA%91OSS/"/>
    
  </entry>
  
</feed>
